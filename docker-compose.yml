version: "3.9"

services:
  django-application: &django
    build:
      context: "./"
      dockerfile: "Dockerfile"
      args:
        - PYTHON_VERSION
    hostname: app
    restart: unless-stopped
    env_file:
      - '.env'
    expose:
      - "8000"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
    tty: true
    volumes:
      - static:/app/static  # Map the Django static files directory into the container
      - app-log-data:/app/logs

  postgres:
    image: postgres:16.1-alpine
    init: true
    hostname: postgres
    restart: unless-stopped
    env_file:
      - '.env'
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME-}
      POSTGRES_DB: ${DATABASE_NAME-}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD-}
      PGPASSWORD: ${DATABASE_PASSWORD-}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS-"--lc-collate=C --lc-ctype=C -c shared_buffers=256MB -c log_timezone=UTC -c max_connections=200"}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT:-5432}:5432"


  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static  # Map the same directory used by Nginx
    ports:
      - "${DOCKER_WEB_PORT:-80}:80"
    depends_on:
      - django-application

  selenium:
    image: selenium/standalone-chrome:latest
    container_name: selenium
    ports:
      - "4444:4444"

volumes:
  static:
  app-log-data:
  postgres-data: